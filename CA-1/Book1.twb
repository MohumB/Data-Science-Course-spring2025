<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.0915.2112                               -->
<workbook original-version='10.4' source-build='10.4.0 (10400.17.0915.2112)' source-platform='win' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='airbnb+ (Multiple Connections)' inline='true' name='federated.18wsk5r0j5mftf1boldit00eafkd' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Airbnb_Listings' name='excel-direct.1yboveq18fnekf1c8nkis0eupz82'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/403-2/DS/Data-Science-Course-spring2025/CA-1/Airbnb_Listings.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Neighborhood_Locations' name='excel-direct.14nze1n1t06jty14trd2s0lryrje'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/403-2/DS/Data-Science-Course-spring2025/CA-1/Neighborhood_Locations.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[airbnb].[Neighbourhood]' />
              <expression op='[Neighbourhood].[Neighbourhood]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1yboveq18fnekf1c8nkis0eupz82' name='airbnb' table='[airbnb$]' type='table'>
            <columns gridOrigin='A1:M10001:no:A1:M10001:0' header='yes' outcome='2'>
              <column datatype='string' name='Neighbourhood' ordinal='0' />
              <column datatype='integer' name='Price' ordinal='1' />
              <column datatype='integer' name='Availability 365' ordinal='2' />
              <column datatype='integer' name='Calculated Host Listings Count' ordinal='3' />
              <column datatype='integer' name='Host Id' ordinal='4' />
              <column datatype='string' name='Host Name' ordinal='5' />
              <column datatype='integer' name='Id' ordinal='6' />
              <column datatype='date' name='Last Review' ordinal='7' />
              <column datatype='integer' name='Minimum Nights' ordinal='8' />
              <column datatype='string' name='Name' ordinal='9' />
              <column datatype='integer' name='Number Of Reviews' ordinal='10' />
              <column datatype='real' name='Reviews Per Month' ordinal='11' />
              <column datatype='string' name='Room Type' ordinal='12' />
            </columns>
          </relation>
          <relation connection='excel-direct.14nze1n1t06jty14trd2s0lryrje' name='Neighbourhood' table='[Neighbourhood$]' type='table'>
            <columns gridOrigin='A1:D222:no:A1:D222:0' header='yes' outcome='6'>
              <column datatype='string' name='Neighbourhood' ordinal='0' />
              <column datatype='string' name='Neighbourhood Group' ordinal='1' />
              <column datatype='real' name='Latitude' ordinal='2' />
              <column datatype='real' name='Longitude' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Availability 365]' value='[airbnb].[Availability 365]' />
          <map key='[Calculated Host Listings Count]' value='[airbnb].[Calculated Host Listings Count]' />
          <map key='[Host Id]' value='[airbnb].[Host Id]' />
          <map key='[Host Name]' value='[airbnb].[Host Name]' />
          <map key='[Id]' value='[airbnb].[Id]' />
          <map key='[Last Review]' value='[airbnb].[Last Review]' />
          <map key='[Latitude]' value='[Neighbourhood].[Latitude]' />
          <map key='[Longitude]' value='[Neighbourhood].[Longitude]' />
          <map key='[Minimum Nights]' value='[airbnb].[Minimum Nights]' />
          <map key='[Name]' value='[airbnb].[Name]' />
          <map key='[Neighbourhood (Neighbourhood)]' value='[Neighbourhood].[Neighbourhood]' />
          <map key='[Neighbourhood Group]' value='[Neighbourhood].[Neighbourhood Group]' />
          <map key='[Neighbourhood]' value='[airbnb].[Neighbourhood]' />
          <map key='[Number Of Reviews]' value='[airbnb].[Number Of Reviews]' />
          <map key='[Price]' value='[airbnb].[Price]' />
          <map key='[Reviews Per Month]' value='[airbnb].[Reviews Per Month]' />
          <map key='[Room Type]' value='[airbnb].[Room Type]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Neighbourhood</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Neighbourhood]</local-name>
            <parent-name>[airbnb]</parent-name>
            <remote-alias>Neighbourhood</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Price]</local-name>
            <parent-name>[airbnb]</parent-name>
            <remote-alias>Price</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Availability 365</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Availability 365]</local-name>
            <parent-name>[airbnb]</parent-name>
            <remote-alias>Availability 365</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Calculated Host Listings Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Calculated Host Listings Count]</local-name>
            <parent-name>[airbnb]</parent-name>
            <remote-alias>Calculated Host Listings Count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Host Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Host Id]</local-name>
            <parent-name>[airbnb]</parent-name>
            <remote-alias>Host Id</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Host Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Host Name]</local-name>
            <parent-name>[airbnb]</parent-name>
            <remote-alias>Host Name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Id]</local-name>
            <parent-name>[airbnb]</parent-name>
            <remote-alias>Id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Review</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Last Review]</local-name>
            <parent-name>[airbnb]</parent-name>
            <remote-alias>Last Review</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Minimum Nights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Minimum Nights]</local-name>
            <parent-name>[airbnb]</parent-name>
            <remote-alias>Minimum Nights</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[airbnb]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number Of Reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number Of Reviews]</local-name>
            <parent-name>[airbnb]</parent-name>
            <remote-alias>Number Of Reviews</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Reviews Per Month</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Reviews Per Month]</local-name>
            <parent-name>[airbnb]</parent-name>
            <remote-alias>Reviews Per Month</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Room Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Room Type]</local-name>
            <parent-name>[airbnb]</parent-name>
            <remote-alias>Room Type</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airbnb]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M10001:no:A1:M10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neighbourhood</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Neighbourhood (Neighbourhood)]</local-name>
            <parent-name>[Neighbourhood]</parent-name>
            <remote-alias>Neighbourhood</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neighbourhood Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Neighbourhood Group]</local-name>
            <parent-name>[Neighbourhood]</parent-name>
            <remote-alias>Neighbourhood Group</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Neighbourhood]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Neighbourhood]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Neighbourhood]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D222:no:A1:D222:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Availability 365:qk]&quot;' value='Average Available Days' />
          <alias key='&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Price:qk]&quot;' value='Average Price' />
          <alias key='&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[sum:Calculated Host Listings Count:qk]&quot;' value='Total Listings' />
          <alias key='&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[sum:Number of Records:qk]&quot;' value='Total Hosts' />
          <alias key='&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[sum:Reviews Per Month:qk]&quot;' value='Total Reviews' />
        </aliases>
      </column>
      <column datatype='integer' name='[Availability 365]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Calculated Host Listings Count]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Host Id]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='string' name='[Neighbourhood Group]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Staten Island&quot;' value=' ' />
        </aliases>
      </column>
      <column datatype='string' name='[Neighbourhood]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
      <column datatype='real' name='[Reviews Per Month]' role='measure' type='quantitative' />
      <column datatype='string' name='[Room Type]' role='dimension' type='nominal' />
      <column-instance column='[Neighbourhood Group]' derivation='Attribute' name='[attr:Neighbourhood Group:nk]' pivot='key' type='nominal' />
      <column-instance column='[Price]' derivation='Attribute' name='[attr:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Reviews Per Month]' derivation='Attribute' name='[attr:Reviews Per Month:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Availability 365]' derivation='Avg' name='[avg:Availability 365:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Reviews Per Month]' derivation='Avg' name='[avg:Reviews Per Month:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Count' name='[cnt:Price:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Price]' derivation='Count' name='[cnt:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Reviews Per Month]' derivation='Count' name='[cnt:Reviews Per Month:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='CountD' name='[ctd:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Median' name='[med:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Neighbourhood Group]' derivation='None' name='[none:Neighbourhood Group:nk]' pivot='key' type='nominal' />
      <column-instance column='[Reviews Per Month]' derivation='None' name='[none:Reviews Per Month:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Room Type]' derivation='None' name='[none:Room Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculated Host Listings Count]' derivation='Sum' name='[sum:Calculated Host Listings Count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Sum' name='[sum:Price:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Reviews Per Month]' derivation='Sum' name='[sum:Reviews Per Month:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/Narges/Documents/My Tableau Repository/Datasources/airbnb+ (Multiple Connections).tde' schema='Extract' tablename='Extract' update-time='04/07/2025 11:13:30 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Availability 365]' value='[Extract].[Availability 365]' />
            <map key='[Calculated Host Listings Count]' value='[Extract].[Calculated Host Listings Count]' />
            <map key='[Host Id]' value='[Extract].[Host Id]' />
            <map key='[Host Name]' value='[Extract].[Host Name]' />
            <map key='[Id]' value='[Extract].[Id]' />
            <map key='[Last Review]' value='[Extract].[Last Review]' />
            <map key='[Latitude]' value='[Extract].[Latitude]' />
            <map key='[Longitude]' value='[Extract].[Longitude]' />
            <map key='[Minimum Nights]' value='[Extract].[Minimum Nights]' />
            <map key='[Name]' value='[Extract].[Name]' />
            <map key='[Neighbourhood (Neighbourhood)]' value='[Extract].[Neighbourhood]' />
            <map key='[Neighbourhood Group]' value='[Extract].[Neighbourhood Group]' />
            <map key='[Neighbourhood]' value='[Extract].[Neighbourhood1]' />
            <map key='[Number Of Reviews]' value='[Extract].[Number Of Reviews]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[Price]' value='[Extract].[Price]' />
            <map key='[Reviews Per Month]' value='[Extract].[Reviews Per Month]' />
            <map key='[Room Type]' value='[Extract].[Room Type]' />
          </cols>
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='48895' timestamp-start='2025-04-07 23:13:30.165' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Availability 365</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Availability 365]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Availability 365</remote-alias>
              <ordinal>0</ordinal>
              <family>airbnb</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>366</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5514443.0</statistic>
                <statistic aggregation='Avg' datatype='real'>112.78132733408324</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>365</statistic>
                <statistic aggregation='Stdev' datatype='real'>131.62228885171479</statistic>
                <statistic aggregation='StdevP' datatype='real'>131.62094287603381</statistic>
                <statistic aggregation='Var' datatype='real'>17324.426922564242</statistic>
                <statistic aggregation='VarP' datatype='real'>17324.072603576155</statistic>
                <statistic aggregation='Count' datatype='integer'>48895</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1468986731.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculated Host Listings Count</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Calculated Host Listings Count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculated Host Listings Count</remote-alias>
              <ordinal>1</ordinal>
              <family>airbnb</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>47</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>327</statistic>
                <statistic aggregation='Count' datatype='integer'>48895</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Host Id</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Host Id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Host Id</remote-alias>
              <ordinal>2</ordinal>
              <family>airbnb</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37457</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3306233696999.0</statistic>
                <statistic aggregation='Avg' datatype='real'>67619055.056733817</statistic>
                <statistic aggregation='Min' datatype='integer'>3</statistic>
                <statistic aggregation='Max' datatype='integer'>274321313</statistic>
                <statistic aggregation='Stdev' datatype='real'>78611505.036157832</statistic>
                <statistic aggregation='StdevP' datatype='real'>78610701.15123114</statistic>
                <statistic aggregation='Var' datatype='real'>6179768724049868.0</statistic>
                <statistic aggregation='VarP' datatype='real'>6179642335488173.0</statistic>
                <statistic aggregation='Count' datatype='integer'>48895</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5.2571801038149819e+20</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Host Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Host Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Host Name</remote-alias>
              <ordinal>3</ordinal>
              <family>airbnb</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11428</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;​ Valéria&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;馨惠&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>48873</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Id</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Id</remote-alias>
              <ordinal>4</ordinal>
              <family>airbnb</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48895</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>929843218533.0</statistic>
                <statistic aggregation='Avg' datatype='real'>19017143.236179568</statistic>
                <statistic aggregation='Min' datatype='integer'>2539</statistic>
                <statistic aggregation='Max' datatype='integer'>36487245</statistic>
                <statistic aggregation='Stdev' datatype='real'>10983108.385610655</statistic>
                <statistic aggregation='StdevP' datatype='real'>10982996.07183069</statistic>
                <statistic aggregation='Var' datatype='real'>120628669810071.09</statistic>
                <statistic aggregation='VarP' datatype='real'>120626202713848.36</statistic>
                <statistic aggregation='Count' datatype='integer'>48895</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2.3580979855725896e+19</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Last Review</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Last Review]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Last Review</remote-alias>
              <ordinal>5</ordinal>
              <family>airbnb</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1765</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2011-03-28#</statistic>
                <statistic aggregation='Max' datatype='date'>#2019-07-08#</statistic>
                <statistic aggregation='Count' datatype='integer'>38843</statistic>
                <statistic aggregation='Median' datatype='date'>#2019-05-19#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>6</ordinal>
              <family>Neighbourhood</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>221</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>40.506410000000002</statistic>
                <statistic aggregation='Max' datatype='real'>40.903289999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>48895</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>7</ordinal>
              <family>Neighbourhood</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>219</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-74.230590000000007</statistic>
                <statistic aggregation='Max' datatype='real'>-73.717950000000002</statistic>
                <statistic aggregation='Count' datatype='integer'>48895</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Minimum Nights</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Minimum Nights]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Minimum Nights</remote-alias>
              <ordinal>8</ordinal>
              <family>airbnb</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>109</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1250</statistic>
                <statistic aggregation='Count' datatype='integer'>48895</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Name</remote-alias>
              <ordinal>9</ordinal>
              <family>airbnb</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>47460</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot; Private 1 bdrm Lefferts Gr, BK apt&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;➖PRIVATE ROOFTOP ➖ LUXURY LIVING IN NEW YORK CITY!&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>48869</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Neighbourhood</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Neighbourhood (Neighbourhood)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Neighbourhood</remote-alias>
              <ordinal>10</ordinal>
              <family>Neighbourhood</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>221</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Allerton&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Woodside&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>48895</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Neighbourhood Group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Neighbourhood Group]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Neighbourhood Group</remote-alias>
              <ordinal>11</ordinal>
              <family>Neighbourhood</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bronx&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Staten Island&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>48895</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Neighbourhood1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Neighbourhood]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Neighbourhood1</remote-alias>
              <ordinal>12</ordinal>
              <family>airbnb</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>221</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Allerton&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Woodside&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>48895</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number Of Reviews</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Number Of Reviews]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number Of Reviews</remote-alias>
              <ordinal>13</ordinal>
              <family>airbnb</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>394</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>629</statistic>
                <statistic aggregation='Count' datatype='integer'>48895</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>14</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>48895.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>48895</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>48895.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Price</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Price</remote-alias>
              <ordinal>15</ordinal>
              <family>airbnb</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>674</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>10000</statistic>
                <statistic aggregation='Count' datatype='integer'>48895</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Reviews Per Month</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Reviews Per Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Reviews Per Month</remote-alias>
              <ordinal>16</ordinal>
              <family>airbnb</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>938</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.01</statistic>
                <statistic aggregation='Max' datatype='real'>58.5</statistic>
                <statistic aggregation='Count' datatype='integer'>38843</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Room Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Room Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Room Type</remote-alias>
              <ordinal>17</ordinal>
              <family>airbnb</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Entire home/apt&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Shared room&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>48895</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.471822' measure-ordering='alphabetic' measure-percentage='0.528178' rowDisplayCount='1000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:Neighbourhood Group:nk]' type='palette'>
            <map to='#9b93c9'>
              <bucket>&quot;Bronx&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Brooklyn&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Queens&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Staten Island&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[cnt:Price:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#499894'>
              <bucket>36</bucket>
            </map>
            <map to='#499894'>
              <bucket>72</bucket>
            </map>
            <map to='#499894'>
              <bucket>86</bucket>
            </map>
            <map to='#499894'>
              <bucket>89</bucket>
            </map>
            <map to='#499894'>
              <bucket>105</bucket>
            </map>
            <map to='#499894'>
              <bucket>147</bucket>
            </map>
            <map to='#499894'>
              <bucket>181</bucket>
            </map>
            <map to='#499894'>
              <bucket>346</bucket>
            </map>
            <map to='#499894'>
              <bucket>399</bucket>
            </map>
            <map to='#499894'>
              <bucket>829</bucket>
            </map>
            <map to='#499894'>
              <bucket>899</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>16</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>24</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>59</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>82</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>106</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>143</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>237</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>241</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>373</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>500</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>553</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>845</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2261</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2465</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>48895</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>22</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>29</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>63</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>135</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>151</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>264</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>284</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>327</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>337</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>572</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>736</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>21661</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>32303</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>20104</bucket>
            </map>
            <map to='#79706e'>
              <bucket>13</bucket>
            </map>
            <map to='#79706e'>
              <bucket>35</bucket>
            </map>
            <map to='#79706e'>
              <bucket>42</bucket>
            </map>
            <map to='#79706e'>
              <bucket>47</bucket>
            </map>
            <map to='#79706e'>
              <bucket>78</bucket>
            </map>
            <map to='#79706e'>
              <bucket>118</bucket>
            </map>
            <map to='#79706e'>
              <bucket>175</bucket>
            </map>
            <map to='#79706e'>
              <bucket>208</bucket>
            </map>
            <map to='#79706e'>
              <bucket>368</bucket>
            </map>
            <map to='#79706e'>
              <bucket>418</bucket>
            </map>
            <map to='#79706e'>
              <bucket>946</bucket>
            </map>
            <map to='#79706e'>
              <bucket>991</bucket>
            </map>
            <map to='#79706e'>
              <bucket>1115</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>37</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>75</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>90</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>92</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>130</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>154</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>170</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>291</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>356</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>357</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>900</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>23</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>31</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>64</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>103</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>136</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>162</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>268</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>288</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>406</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>621</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>792</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>20</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>45</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>55</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>94</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>128</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>198</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>232</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>233</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>236</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>485</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>501</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>1958</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>26</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>49</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>60</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>87</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>109</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>146</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>230</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>247</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>256</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>506</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>579</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1440</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2658</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>18</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>52</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>65</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>71</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>85</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>124</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>218</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>225</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>426</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>467</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>1322</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>1798</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>14762</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>30</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>32</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>58</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>68</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>96</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>141</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>309</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>347</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>744</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>813</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>3145</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>14</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>46</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>67</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>79</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>120</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>138</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>177</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>180</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>209</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>390</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>432</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>1117</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>1137</bucket>
            </map>
            <map to='#d37295'>
              <bucket>15</bucket>
            </map>
            <map to='#d37295'>
              <bucket>38</bucket>
            </map>
            <map to='#d37295'>
              <bucket>48</bucket>
            </map>
            <map to='#d37295'>
              <bucket>80</bucket>
            </map>
            <map to='#d37295'>
              <bucket>122</bucket>
            </map>
            <map to='#d37295'>
              <bucket>140</bucket>
            </map>
            <map to='#d37295'>
              <bucket>185</bucket>
            </map>
            <map to='#d37295'>
              <bucket>192</bucket>
            </map>
            <map to='#d37295'>
              <bucket>220</bucket>
            </map>
            <map to='#d37295'>
              <bucket>392</bucket>
            </map>
            <map to='#d37295'>
              <bucket>447</bucket>
            </map>
            <map to='#d37295'>
              <bucket>1528</bucket>
            </map>
            <map to='#d37295'>
              <bucket>1545</bucket>
            </map>
            <map to='#d37295'>
              <bucket>3158</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>19</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>44</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>54</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>69</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>88</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>125</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>196</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>229</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>231</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>470</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>891</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>1853</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>21</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>56</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>73</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>99</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>137</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>213</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>234</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>235</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>239</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>489</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>511</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>570</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>1971</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#e15759'>
              <bucket>33</bucket>
            </map>
            <map to='#e15759'>
              <bucket>39</bucket>
            </map>
            <map to='#e15759'>
              <bucket>76</bucket>
            </map>
            <map to='#e15759'>
              <bucket>112</bucket>
            </map>
            <map to='#e15759'>
              <bucket>119</bucket>
            </map>
            <map to='#e15759'>
              <bucket>157</bucket>
            </map>
            <map to='#e15759'>
              <bucket>187</bucket>
            </map>
            <map to='#e15759'>
              <bucket>358</bucket>
            </map>
            <map to='#e15759'>
              <bucket>380</bucket>
            </map>
            <map to='#e15759'>
              <bucket>416</bucket>
            </map>
            <map to='#e15759'>
              <bucket>911</bucket>
            </map>
            <map to='#e15759'>
              <bucket>5666</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>25</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>34</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>70</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>97</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>104</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>144</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>176</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>338</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>609</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>768</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>828</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>27</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>51</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>61</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>91</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>110</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>148</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>250</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>252</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>258</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>535</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>594</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1091</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2853</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3714</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>17</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>41</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>50</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>83</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>123</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>186</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>210</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>222</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>423</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>452</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>993</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>1564</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>13576</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>12</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>40</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>43</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>66</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>77</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>113</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>164</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>204</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>363</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>414</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>622</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>932</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>1113</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>28</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>62</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>84</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>121</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>150</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>253</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>261</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>275</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>537</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>676</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3920</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>6658</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[sum:Price:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#499894'>
              <bucket>36</bucket>
            </map>
            <map to='#499894'>
              <bucket>72</bucket>
            </map>
            <map to='#499894'>
              <bucket>86</bucket>
            </map>
            <map to='#499894'>
              <bucket>89</bucket>
            </map>
            <map to='#499894'>
              <bucket>105</bucket>
            </map>
            <map to='#499894'>
              <bucket>147</bucket>
            </map>
            <map to='#499894'>
              <bucket>181</bucket>
            </map>
            <map to='#499894'>
              <bucket>206</bucket>
            </map>
            <map to='#499894'>
              <bucket>346</bucket>
            </map>
            <map to='#499894'>
              <bucket>399</bucket>
            </map>
            <map to='#499894'>
              <bucket>559</bucket>
            </map>
            <map to='#499894'>
              <bucket>829</bucket>
            </map>
            <map to='#499894'>
              <bucket>899</bucket>
            </map>
            <map to='#499894'>
              <bucket>1241</bucket>
            </map>
            <map to='#499894'>
              <bucket>2103</bucket>
            </map>
            <map to='#499894'>
              <bucket>3415</bucket>
            </map>
            <map to='#499894'>
              <bucket>5671</bucket>
            </map>
            <map to='#499894'>
              <bucket>9201</bucket>
            </map>
            <map to='#499894'>
              <bucket>22123</bucket>
            </map>
            <map to='#499894'>
              <bucket>59065</bucket>
            </map>
            <map to='#499894'>
              <bucket>175919</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>16</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>24</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>57</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>59</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>82</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>106</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>143</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>237</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>241</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>373</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>500</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>553</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>783</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>845</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1067</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1550</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2261</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2465</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2694</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>4863</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>7663</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>17402</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>39715</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>48895</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>103255</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>22</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>29</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>63</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>135</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>151</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>264</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>284</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>327</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>337</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>528</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>572</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>736</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>811</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1114</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1785</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3184</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5287</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>8721</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>19998</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>21661</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>32303</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>44086</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>148783</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>20104</bucket>
            </map>
            <map to='#79706e'>
              <bucket>13</bucket>
            </map>
            <map to='#79706e'>
              <bucket>35</bucket>
            </map>
            <map to='#79706e'>
              <bucket>42</bucket>
            </map>
            <map to='#79706e'>
              <bucket>47</bucket>
            </map>
            <map to='#79706e'>
              <bucket>78</bucket>
            </map>
            <map to='#79706e'>
              <bucket>118</bucket>
            </map>
            <map to='#79706e'>
              <bucket>175</bucket>
            </map>
            <map to='#79706e'>
              <bucket>208</bucket>
            </map>
            <map to='#79706e'>
              <bucket>269</bucket>
            </map>
            <map to='#79706e'>
              <bucket>368</bucket>
            </map>
            <map to='#79706e'>
              <bucket>418</bucket>
            </map>
            <map to='#79706e'>
              <bucket>640</bucket>
            </map>
            <map to='#79706e'>
              <bucket>909</bucket>
            </map>
            <map to='#79706e'>
              <bucket>946</bucket>
            </map>
            <map to='#79706e'>
              <bucket>991</bucket>
            </map>
            <map to='#79706e'>
              <bucket>1115</bucket>
            </map>
            <map to='#79706e'>
              <bucket>1372</bucket>
            </map>
            <map to='#79706e'>
              <bucket>2308</bucket>
            </map>
            <map to='#79706e'>
              <bucket>3787</bucket>
            </map>
            <map to='#79706e'>
              <bucket>5929</bucket>
            </map>
            <map to='#79706e'>
              <bucket>11333</bucket>
            </map>
            <map to='#79706e'>
              <bucket>26870</bucket>
            </map>
            <map to='#79706e'>
              <bucket>71428</bucket>
            </map>
            <map to='#79706e'>
              <bucket>316233</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>37</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>75</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>90</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>92</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>130</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>154</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>170</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>244</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>291</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>356</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>357</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>567</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>900</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>1252</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2123</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>3476</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>5684</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>9895</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>22402</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>59431</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>205580</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>23</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>31</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>64</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>103</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>136</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>155</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>162</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>268</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>288</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>406</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>621</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>792</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>824</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>1121</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>1842</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>3200</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>5335</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>8757</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>20365</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>52111</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>161477</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>20</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>45</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>55</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>94</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>128</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>198</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>232</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>233</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>236</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>351</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>485</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>501</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>719</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>1057</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>1502</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>1958</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>2621</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>4664</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>7067</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>16255</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>32649</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>95132</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>436801</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>26</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>49</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>60</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>87</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>109</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>146</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>230</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>247</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>256</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>376</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>506</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>579</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>799</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1069</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1440</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1638</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2658</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2828</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>4903</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>8010</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>17514</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>39837</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>104043</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>18</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>52</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>65</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>71</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>85</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>124</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>218</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>225</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>341</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>426</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>467</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>700</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>1040</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>1322</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>1461</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>1798</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2415</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>4375</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>6384</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>14762</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>15047</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>31176</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>86843</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>400987</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>30</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>32</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>58</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>68</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>96</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>141</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>200</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>309</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>347</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>744</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>813</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>852</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1183</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1851</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>3145</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>3296</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>5373</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>8891</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>20981</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>57264</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>167765</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>14</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>46</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>67</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>79</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>120</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>138</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>177</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>180</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>209</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>390</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>432</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>551</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>661</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>960</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>1117</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>1137</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>1390</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2342</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>3870</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>6160</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>12479</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>27354</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>74022</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>339729</bucket>
            </map>
            <map to='#d37295'>
              <bucket>15</bucket>
            </map>
            <map to='#d37295'>
              <bucket>38</bucket>
            </map>
            <map to='#d37295'>
              <bucket>48</bucket>
            </map>
            <map to='#d37295'>
              <bucket>80</bucket>
            </map>
            <map to='#d37295'>
              <bucket>122</bucket>
            </map>
            <map to='#d37295'>
              <bucket>140</bucket>
            </map>
            <map to='#d37295'>
              <bucket>185</bucket>
            </map>
            <map to='#d37295'>
              <bucket>192</bucket>
            </map>
            <map to='#d37295'>
              <bucket>220</bucket>
            </map>
            <map to='#d37295'>
              <bucket>287</bucket>
            </map>
            <map to='#d37295'>
              <bucket>392</bucket>
            </map>
            <map to='#d37295'>
              <bucket>447</bucket>
            </map>
            <map to='#d37295'>
              <bucket>662</bucket>
            </map>
            <map to='#d37295'>
              <bucket>1006</bucket>
            </map>
            <map to='#d37295'>
              <bucket>1391</bucket>
            </map>
            <map to='#d37295'>
              <bucket>1528</bucket>
            </map>
            <map to='#d37295'>
              <bucket>1545</bucket>
            </map>
            <map to='#d37295'>
              <bucket>2361</bucket>
            </map>
            <map to='#d37295'>
              <bucket>3158</bucket>
            </map>
            <map to='#d37295'>
              <bucket>4279</bucket>
            </map>
            <map to='#d37295'>
              <bucket>6257</bucket>
            </map>
            <map to='#d37295'>
              <bucket>13227</bucket>
            </map>
            <map to='#d37295'>
              <bucket>29364</bucket>
            </map>
            <map to='#d37295'>
              <bucket>75291</bucket>
            </map>
            <map to='#d37295'>
              <bucket>344812</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>19</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>44</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>54</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>69</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>88</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>125</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>196</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>229</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>231</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>470</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>556</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>714</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>891</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>1042</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>1487</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>1853</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>2449</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>4525</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>6844</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>15342</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>32196</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>89214</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>415720</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>21</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>56</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>73</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>99</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>137</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>213</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>234</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>235</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>239</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>355</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>489</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>511</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>570</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>757</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>1066</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>1513</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>1971</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>2672</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>4810</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>7402</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>17347</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>39224</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>102783</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>563707</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#e15759'>
              <bucket>33</bucket>
            </map>
            <map to='#e15759'>
              <bucket>39</bucket>
            </map>
            <map to='#e15759'>
              <bucket>76</bucket>
            </map>
            <map to='#e15759'>
              <bucket>112</bucket>
            </map>
            <map to='#e15759'>
              <bucket>119</bucket>
            </map>
            <map to='#e15759'>
              <bucket>157</bucket>
            </map>
            <map to='#e15759'>
              <bucket>187</bucket>
            </map>
            <map to='#e15759'>
              <bucket>249</bucket>
            </map>
            <map to='#e15759'>
              <bucket>358</bucket>
            </map>
            <map to='#e15759'>
              <bucket>380</bucket>
            </map>
            <map to='#e15759'>
              <bucket>416</bucket>
            </map>
            <map to='#e15759'>
              <bucket>608</bucket>
            </map>
            <map to='#e15759'>
              <bucket>911</bucket>
            </map>
            <map to='#e15759'>
              <bucket>1274</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2125</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3675</bucket>
            </map>
            <map to='#e15759'>
              <bucket>5666</bucket>
            </map>
            <map to='#e15759'>
              <bucket>5699</bucket>
            </map>
            <map to='#e15759'>
              <bucket>9981</bucket>
            </map>
            <map to='#e15759'>
              <bucket>23066</bucket>
            </map>
            <map to='#e15759'>
              <bucket>61894</bucket>
            </map>
            <map to='#e15759'>
              <bucket>209033</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>25</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>34</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>70</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>97</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>104</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>144</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>176</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>205</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>338</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>609</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>768</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>828</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>833</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1222</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1920</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>3397</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>5455</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>9149</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>21822</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>58225</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>169731</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>27</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>51</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>61</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>91</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>110</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>148</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>250</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>252</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>258</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>425</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>535</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>594</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>800</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1070</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1091</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1672</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2853</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2920</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3714</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>5036</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>8189</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>18623</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>40988</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>105469</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>17</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>41</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>50</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>83</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>123</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>186</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>210</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>222</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>315</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>423</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>452</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>850</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>993</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>1014</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>1450</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>1564</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>2368</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>4309</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>6364</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>13576</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>15019</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>30806</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>80560</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>399917</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>12</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>40</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>43</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>66</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>77</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>113</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>164</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>204</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>363</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>414</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>543</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>619</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>622</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>901</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>932</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>1113</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>1308</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2185</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>3679</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>5911</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10494</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>25729</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>68449</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>277959</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>28</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>62</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>84</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>121</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>150</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>253</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>261</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>275</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>509</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>537</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>676</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>802</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>1085</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>1716</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3114</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3920</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>5160</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>6658</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>8577</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>19069</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>41670</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>107165</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[attr:Price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[cnt:Price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[ctd:Price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[med:Price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[sum:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[attr:Reviews Per Month:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Reviews Per Month:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[cnt:Reviews Per Month:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Reviews Per Month:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[sum:Reviews Per Month:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Neighbourhood Group:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bronx&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Staten Island&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Queens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brooklyn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Room Type:nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;Entire home/apt&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Shared room&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Private room&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Iran&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource inline='true' name='OpenStreetMap WMS' source-platform='win' version='10.4'>
      <connection class='OGC-WMS' description='http://ows.terrestris.de/osm-gray/service?' full-url='http://ows.terrestris.de/osm-gray/service?' inline='true' offline='' port='80' server='ows.terrestris.de' service='http' tileset='US\normal' url='/osm-gray/service?' use-tiled-maps='true' />
      <languages />
      <properties />
      <map-styles />
      <mapsource-defaults version='10.4'>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='OSM-WMS' value='true' />
          </style-rule>
        </style>
      </mapsource-defaults>
    </mapsource>
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='D1-P2' />
      <command command='tsc:brush'>
        <param name='field-captions' value='CNT(Price)' />
        <param name='target' value='D1-P2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='D1-P1'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb+ (Multiple Connections)' name='federated.18wsk5r0j5mftf1boldit00eafkd' />
          </datasources>
          <datasource-dependencies datasource='federated.18wsk5r0j5mftf1boldit00eafkd'>
            <column datatype='integer' name='[Availability 365]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Calculated Host Listings Count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='real' name='[Reviews Per Month]' role='measure' type='quantitative' />
            <column-instance column='[Availability 365]' derivation='Avg' name='[avg:Availability 365:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculated Host Listings Count]' derivation='Sum' name='[sum:Calculated Host Listings Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Reviews Per Month]' derivation='Sum' name='[sum:Reviews Per Month:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18wsk5r0j5mftf1boldit00eafkd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[sum:Calculated Host Listings Count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Price:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Availability 365:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[sum:Reviews Per Month:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.18wsk5r0j5mftf1boldit00eafkd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[sum:Calculated Host Listings Count:qk]&quot;</bucket>
              <bucket>&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Price:qk]&quot;</bucket>
              <bucket>&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[sum:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Availability 365:qk]&quot;</bucket>
              <bucket>&quot;[federated.18wsk5r0j5mftf1boldit00eafkd].[sum:Reviews Per Month:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.18wsk5r0j5mftf1boldit00eafkd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[:Measure Names]' value='229' />
            <format attr='height' value='49' />
            <format attr='border-style' value='none' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[:Measure Names]' value='21' />
            <format attr='width-header' value='56' />
            <format attr='background-color' scope='rows' value='#f9eee8' />
            <format attr='border-color' value='#b07aa1' />
            <format attr='border-style' value='none' />
            <format attr='text-align' data-class='subtotal' scope='cols' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#b07aa1' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f2f2f2' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='rows' value='#f9a6554b' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-size' scope='rows' value='5' />
            <format attr='stroke-color' scope='rows' value='#f28e2b' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-color' scope='cols' value='#d37295' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.18wsk5r0j5mftf1boldit00eafkd].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.18wsk5r0j5mftf1boldit00eafkd].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='D1-P2'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb+ (Multiple Connections)' name='federated.18wsk5r0j5mftf1boldit00eafkd' />
          </datasources>
          <mapsources>
            <mapsource name='OpenStreetMap WMS' />
          </mapsources>
          <datasource-dependencies datasource='federated.18wsk5r0j5mftf1boldit00eafkd'>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[Neighbourhood Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Staten Island&quot;' value=' ' />
              </aliases>
            </column>
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Neighbourhood Group]' derivation='None' name='[none:Neighbourhood Group:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Longitude:qk]' field-type='quantitative' max='-8166680.1102791689' min='-8298707.7839597827' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Latitude:qk]' field-type='quantitative' max='5015435.4490211755' min='4920236.3184753628' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Price:qk]' field-type='quantitative' max-size='1' min-size='0' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='OSM-WMS' value='true' />
            <format attr='enabled' id='OSM-WMS-no-labels' value='false' />
            <format attr='enabled' id='OSM-Overlay-WMS' value='false' />
            <format attr='enabled' id='TOPO-WMS' value='false' />
            <format attr='enabled' id='TOPO-OSM-WMS' value='false' />
            <format attr='enabled' id='SRTM30-Hillshade' value='false' />
            <format attr='enabled' id='SRTM30-Colored' value='false' />
            <format attr='enabled' id='SRTM30-Colored-Hillshade' value='false' />
            <format attr='enabled' id='SRTM30-Contour' value='false' />
            <format attr='enabled' id='Dark' value='false' />
            <format attr='enabled' id='HikeMap' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]' />
              <size column='[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Price:qk]' />
              <geometry column='[federated.18wsk5r0j5mftf1boldit00eafkd].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='15' />
                <format attr='mark-color' value='#76b7b2' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Latitude:qk]</rows>
        <cols>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='D1-P3'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb+ (Multiple Connections)' name='federated.18wsk5r0j5mftf1boldit00eafkd' />
          </datasources>
          <datasource-dependencies datasource='federated.18wsk5r0j5mftf1boldit00eafkd'>
            <column datatype='string' name='[Neighbourhood Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Staten Island&quot;' value=' ' />
              </aliases>
            </column>
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Neighbourhood Group]' derivation='None' name='[none:Neighbourhood Group:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]' direction='ASC' using='[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Price:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Price:qk]' field-type='quantitative' max='218.77662768166434' min='10.008541995204524' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Price:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Price:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Price:qk]' scope='cols' value='true' />
            <format attr='display' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Price:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='18' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]</rows>
        <cols>[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Price:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='D1-P4'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb+ (Multiple Connections)' name='federated.18wsk5r0j5mftf1boldit00eafkd' />
          </datasources>
          <datasource-dependencies datasource='federated.18wsk5r0j5mftf1boldit00eafkd'>
            <column datatype='string' name='[Neighbourhood (Neighbourhood)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Neighbourhood Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Staten Island&quot;' value=' ' />
              </aliases>
            </column>
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Neighbourhood (Neighbourhood)]' derivation='None' name='[none:Neighbourhood (Neighbourhood):nk]' pivot='key' type='nominal' />
            <column-instance column='[Neighbourhood Group]' derivation='None' name='[none:Neighbourhood Group:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood (Neighbourhood):nk]'>
            <groupfilter expression='AVG([Price]) &gt; 180.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Neighbourhood (Neighbourhood):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood (Neighbourhood):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Price:qk]' />
              <text column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood (Neighbourhood):nk]' />
              <color column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='D1-P5'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb+ (Multiple Connections)' name='federated.18wsk5r0j5mftf1boldit00eafkd' />
          </datasources>
          <datasource-dependencies datasource='federated.18wsk5r0j5mftf1boldit00eafkd'>
            <column datatype='string' name='[Neighbourhood (Neighbourhood)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Neighbourhood Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Staten Island&quot;' value=' ' />
              </aliases>
            </column>
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Neighbourhood (Neighbourhood)]' derivation='None' name='[none:Neighbourhood (Neighbourhood):nk]' pivot='key' type='nominal' />
            <column-instance column='[Neighbourhood Group]' derivation='None' name='[none:Neighbourhood Group:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood (Neighbourhood):nk]'>
            <groupfilter expression='AVG([Price]) &gt; 180.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Neighbourhood (Neighbourhood):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood (Neighbourhood):nk]' direction='ASC' using='[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Price:qk]' />
          <sort class='manual' column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Manhattan&quot;</bucket>
              <bucket>&quot;Brooklyn&quot;</bucket>
              <bucket>&quot;Queens&quot;</bucket>
              <bucket>&quot;Bronx&quot;</bucket>
              <bucket>&quot;Staten Island&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood (Neighbourhood):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Price:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Price:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Price:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='337' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d3b348' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Price:qk]</rows>
        <cols>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood (Neighbourhood):nk]</cols>
      </table>
    </worksheet>
    <worksheet name='D2-P1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>FOR </run>
            <run fontcolor='#499894'>RENTER</run>
            <run>, WHERE SEEMS TO BE WORTH TO STAY &amp; HOW MUCH DOES IT COSTS IN EACH TYPE OF ACCOMADATION?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='D2-P2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>PRIVATE ROOM</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb+ (Multiple Connections)' name='federated.18wsk5r0j5mftf1boldit00eafkd' />
          </datasources>
          <datasource-dependencies datasource='federated.18wsk5r0j5mftf1boldit00eafkd'>
            <column datatype='integer' name='[Minimum Nights]' role='measure' type='quantitative' />
            <column datatype='string' name='[Neighbourhood Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Staten Island&quot;' value=' ' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number Of Reviews]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Room Type]' role='dimension' type='nominal' />
            <column-instance column='[Minimum Nights]' derivation='CountD' name='[ctd:Minimum Nights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price]' derivation='Median' name='[med:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Neighbourhood Group]' derivation='None' name='[none:Neighbourhood Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number Of Reviews]' derivation='None' name='[none:Number Of Reviews:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Room Type]' derivation='None' name='[none:Room Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Room Type:nk]'>
            <groupfilter function='member' level='[none:Room Type:nk]' member='&quot;Private room&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Room Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[med:Price:qk]' field-type='quantitative' max='400.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[ctd:Minimum Nights:qk]' field-type='quantitative' max='50' min='-20' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[ctd:Minimum Nights:qk]' scope='rows' value='Minimum Nights' />
            <format attr='subtitle' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[ctd:Minimum Nights:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[ctd:Minimum Nights:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[med:Price:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[med:Price:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Number Of Reviews:qk]' />
              <color column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]' />
              <lod column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Room Type:nk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
          </pane>
        </panes>
        <rows>[federated.18wsk5r0j5mftf1boldit00eafkd].[ctd:Minimum Nights:qk]</rows>
        <cols>[federated.18wsk5r0j5mftf1boldit00eafkd].[med:Price:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='D2-P3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>SHARED ROOM</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb+ (Multiple Connections)' name='federated.18wsk5r0j5mftf1boldit00eafkd' />
          </datasources>
          <datasource-dependencies datasource='federated.18wsk5r0j5mftf1boldit00eafkd'>
            <column datatype='integer' name='[Minimum Nights]' role='measure' type='quantitative' />
            <column datatype='string' name='[Neighbourhood Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Staten Island&quot;' value=' ' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number Of Reviews]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Room Type]' role='dimension' type='nominal' />
            <column-instance column='[Minimum Nights]' derivation='CountD' name='[ctd:Minimum Nights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price]' derivation='Median' name='[med:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Neighbourhood Group]' derivation='None' name='[none:Neighbourhood Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number Of Reviews]' derivation='None' name='[none:Number Of Reviews:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Room Type]' derivation='None' name='[none:Room Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Room Type:nk]'>
            <groupfilter function='member' level='[none:Room Type:nk]' member='&quot;Shared room&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Room Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[med:Price:qk]' field-type='quantitative' max='400.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[ctd:Minimum Nights:qk]' field-type='quantitative' max='40' min='-20' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[ctd:Minimum Nights:qk]' scope='rows' value='Minimum Nights' />
            <format attr='subtitle' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[ctd:Minimum Nights:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[ctd:Minimum Nights:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[med:Price:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[med:Price:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Number Of Reviews:qk]' />
              <color column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]' />
              <lod column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Room Type:nk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
          </pane>
        </panes>
        <rows>[federated.18wsk5r0j5mftf1boldit00eafkd].[ctd:Minimum Nights:qk]</rows>
        <cols>[federated.18wsk5r0j5mftf1boldit00eafkd].[med:Price:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='D2-P4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>ENTIRE HOME/FLAT</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb+ (Multiple Connections)' name='federated.18wsk5r0j5mftf1boldit00eafkd' />
          </datasources>
          <datasource-dependencies datasource='federated.18wsk5r0j5mftf1boldit00eafkd'>
            <column datatype='integer' name='[Minimum Nights]' role='measure' type='quantitative' />
            <column datatype='string' name='[Neighbourhood Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Staten Island&quot;' value=' ' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number Of Reviews]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Room Type]' role='dimension' type='nominal' />
            <column-instance column='[Minimum Nights]' derivation='CountD' name='[ctd:Minimum Nights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price]' derivation='Median' name='[med:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Neighbourhood Group]' derivation='None' name='[none:Neighbourhood Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number Of Reviews]' derivation='None' name='[none:Number Of Reviews:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Room Type]' derivation='None' name='[none:Room Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Room Type:nk]'>
            <groupfilter function='member' level='[none:Room Type:nk]' member='&quot;Entire home/apt&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Room Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[med:Price:qk]' field-type='quantitative' max='400.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[ctd:Minimum Nights:qk]' field-type='quantitative' max='40' min='-20' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[ctd:Minimum Nights:qk]' scope='rows' value='Minimum Nights' />
            <format attr='subtitle' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[ctd:Minimum Nights:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[ctd:Minimum Nights:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[med:Price:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[med:Price:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Number Of Reviews:qk]' />
              <color column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]' />
              <lod column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Room Type:nk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
          </pane>
        </panes>
        <rows>[federated.18wsk5r0j5mftf1boldit00eafkd].[ctd:Minimum Nights:qk]</rows>
        <cols>[federated.18wsk5r0j5mftf1boldit00eafkd].[med:Price:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='D2-P5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>FOR THE </run>
            <run fontcolor='#499894'>HOST</run>
            <run>, IS IT WORTH IT TO BE A HOST? </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 13'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>WHICH NEIGHBORHOOD IS THE MOST POPULAR FOR AIRBNB LISTINGS?</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb+ (Multiple Connections)' name='federated.18wsk5r0j5mftf1boldit00eafkd' />
          </datasources>
          <datasource-dependencies datasource='federated.18wsk5r0j5mftf1boldit00eafkd'>
            <column datatype='integer' name='[Calculated Host Listings Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Neighbourhood Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Staten Island&quot;' value=' ' />
              </aliases>
            </column>
            <column-instance column='[Calculated Host Listings Count]' derivation='Avg' name='[avg:Calculated Host Listings Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Neighbourhood Group]' derivation='None' name='[none:Neighbourhood Group:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Calculated Host Listings Count:qk]</rows>
        <cols>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 14'>
      <layout-options>
        <title>
          <formatted-text>
            <run>HOW MUCH DO THE HOSTS EARN FROM AIRBNB?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb+ (Multiple Connections)' name='federated.18wsk5r0j5mftf1boldit00eafkd' />
          </datasources>
          <datasource-dependencies datasource='federated.18wsk5r0j5mftf1boldit00eafkd'>
            <column datatype='integer' name='[Availability 365]' role='measure' type='quantitative' />
            <column-instance column='[Availability 365]' derivation='Sum' name='[win:sum:Availability 365:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text>
                <run>HEL[</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.18wsk5r0j5mftf1boldit00eafkd].[win:sum:Availability 365:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb+ (Multiple Connections)' name='federated.18wsk5r0j5mftf1boldit00eafkd' />
          </datasources>
          <datasource-dependencies datasource='federated.18wsk5r0j5mftf1boldit00eafkd'>
            <column datatype='string' name='[Neighbourhood Group]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Staten Island&quot;' value=' ' />
              </aliases>
            </column>
            <column datatype='real' name='[Reviews Per Month]' role='measure' type='quantitative' />
            <column-instance column='[Reviews Per Month]' derivation='Avg' name='[avg:Reviews Per Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Neighbourhood Group]' derivation='None' name='[none:Neighbourhood Group:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Reviews Per Month:qk]</rows>
        <cols>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb+ (Multiple Connections)' name='federated.18wsk5r0j5mftf1boldit00eafkd' />
          </datasources>
          <datasource-dependencies datasource='federated.18wsk5r0j5mftf1boldit00eafkd'>
            <column datatype='date' name='[Last Review]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Reviews Per Month]' role='measure' type='quantitative' />
            <column-instance column='[Reviews Per Month]' derivation='Avg' name='[avg:Reviews Per Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Last Review]' derivation='Month-Trunc' name='[tmn:Last Review:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Reviews Per Month:qk]' included-values='non-null' />
          <slices>
            <column>[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Reviews Per Month:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.40580111742019653' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Reviews Per Month:qk]</rows>
        <cols>[federated.18wsk5r0j5mftf1boldit00eafkd].[tmn:Last Review:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='827' maxwidth='1169' minheight='827' minwidth='1169' preset-index='16' sizing-mode='fixed' />
      <zones use-insets='false'>
        <zone h='60943' id='3' name='D1-P2' w='50470' x='-257' y='7376' />
        <zone h='16687' id='4' name='D1-P3' show-title='false' w='47990' x='51155' y='11366' />
        <zone h='30834' id='5' name='D1-P5' show-title='false' w='99316' x='86' y='69649' />
        <zone h='48972' id='6' name='D1-P4' show-title='false' w='48674' x='50642' y='25877' />
        <zone h='11245' id='7' name='D1-P1' w='119076' x='-257' y='-2056' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='827' maxwidth='1169' minheight='827' minwidth='1169' preset-index='15' sizing-mode='fixed' />
      <zones use-insets='false'>
        <zone h='11125' id='1' name='D2-P1' w='98888' x='257' y='1572' />
        <zone h='33253' id='2' name='D2-P2' w='33276' x='0' y='11125' />
        <zone h='33253' id='3' name='D2-P3' w='33276' x='32678' y='10883' />
        <zone h='33253' id='4' name='D2-P4' w='33276' x='66980' y='10762' />
        <zone h='5441' id='5' name='D2-P5' w='55774' x='171' y='44498' />
        <zone h='6771' id='6' leg-item-layout='horz' name='D2-P4' pane-specification-id='0' param='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]' type='color' w='58597' x='46108' y='5079' />
        <zone h='45586' id='7' name='Sheet 13' w='30710' x='68606' y='54051' />
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='30'>
    <window class='worksheet' name='D1-P1'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='D1-P2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Price:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[avg:Price:qk]</field>
            <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[cnt:Price:qk]</field>
            <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Latitude:qk]</field>
            <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood (Neighbourhood):nk]</field>
            <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-unit-selection mapunit='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='D1-P3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]</field>
            <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Price:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='D1-P4'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Bronx&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood (Neighbourhood):nk]</field>
            <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='D1-P5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood (Neighbourhood):nk]</field>
            <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]</field>
            <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood:nk]</field>
            <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[yr:Last Review:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='D1-P1' />
        <viewpoint name='D1-P2'>
          <zoom type='entire-view' />
          <default-map-unit-selection mapunit='2' />
        </viewpoint>
        <viewpoint name='D1-P3' />
        <viewpoint name='D1-P4' />
        <viewpoint name='D1-P5'>
          <zoom type='entire-view' />
          <highlight field='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='D2-P1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='D2-P2'>
          <zoom type='entire-view' />
          <highlight field='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='D2-P3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='D2-P4'>
          <zoom type='entire-view' />
          <highlight field='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='D2-P5' />
        <viewpoint name='Sheet 13'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='D2-P1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='D2-P2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Number Of Reviews:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]</field>
            <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Room Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='D2-P3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Number Of Reviews:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]</field>
            <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Room Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='D2-P4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Number Of Reviews:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]</field>
            <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Room Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='D2-P5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Queens&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.18wsk5r0j5mftf1boldit00eafkd].[none:Neighbourhood Group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='74' name='D1-P1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='D1-P2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nJS9WYzkV3bm98W+R2TskXtlsRYWiyxSbDZJjdrqEQwPYBnwzIMBQxBG8IMf
      BFk9giQLsgzD4KsBG4YBA4Zfx34wPPBLu1+EEaBdYqupZnGrNSv3zMjIjH3fww/B3+GNJHts
      B1DgUpkR/7j33HO+853vnOs5ODhYPHnyRPl8Xq1WS36/X4lEQpVKRcViUc1mU+FwWN1uV/P5
      XF6vV9/73vc0GAx0fHysQCCgwWCgbrer2WymWCymtbU1tdtt3b59WycnJwoGgxoOhwoGgwqH
      w1pbW9NoNFIkEtF8Ptcvei0WCy0WC/l8Pi0WC/X7fS0WC3m9Xnk8HqVSKUnSaDSy35lOp/L7
      /fbfgUBAfr9fw+FQs9lMfr9f4/F45WdGo5Hq9bq8Xq9SqZRKpZJ9/mw20/n5uUajkeLxuKLR
      qK1DIBBQr9dTKBSyz/b5fJIkj8ejaDSq2Wymq6sr+Xw+JRIJJZNJDYdDDQYDeb1ezedzXV1d
      qdfrKZfLKZvNajabKZlMajqdqtFo2PflvcPhsEKhkMbjsb1XvV7XYrFQMplUMpm05xsOh5pO
      p4rFYgqFQvJ4PFosFhoMBhqPx0qlUvJ4PLYWk8lE0+lUkUhEzWZTnU5H2WxWkUhE3W5XgUBA
      Pp9P3W5XqVRK/X5fkUhEfr9fi8VCjUZDHo9Hfr9f8Xhcg8FAtVpNw+FQuVxO4XBY/X5fgUBA
      4XBYfr9fo9FIg8FA0+lU9XrdbGJtbU2ZTMbWyufzKRKJyOv1qlqtKhAIKBKJqN/vq9FoKBQK
      KRwOK5vNqtVqaTKZyOfzqd1uq9frfcu+UqmU/LPZzB40k8loMpmoVqvJ7/erUqlod3dXT548
      0euvv66Liwutra1pMBhoMBgoEAio1WopnU6r1WpJktLptJLJpHw+n168eKH19XWNRiPNZjMd
      HR3p4cOHms1m8vl88vl8mkwmZmx8cQxekiKRiEajkRaLhRkaDz8ajRQKhexZarWaIpGIPB6P
      5vO5HWiewev12kJjpJLU6/UUiUQUi8VUKBQ0m800nU7l8XgUCASUzWZ1cnKiq6srJRIJeb1e
      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
    </thumbnail>
    <thumbnail height='104' name='D1-P3' width='192'>
      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
      7Wb0G/4f9pLkt7Cn8ZAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='D1-P4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='D1-P5' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='D2-P1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='D2-P2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='D2-P3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAWx0lEQVR4nO3da2xk533f8e85Z87cL+Twutxd7i6Xy8tqKUWWY1my4zht5DZGURdI47RA
      3DZAUfRFLyjaIug7vwjaF0ULBEVRJGlRpEYay3FkK64tV4pRKfJKsgytpb2RXN7v5MxwZjjD
      Gc7MuTx9sdJGXnElXuYMd/b8P4BeiOT+5+HD+Z3nnDPP/EdTSimE8Cn9pAcgxEkKNKOI67o4
      joOmac0o95Haut78nLZbXS+02xx4UfdIAShsLVNy4uj1PBUnwOjweXSl0HW96SGwbZtAoCk5
      beu6Xmi3OfCi7qGruVaNbGEH11QE3ABxbOqA2dRhCdEah15PysUCDavBZiaPZdWpWg0ML0Ym
      RAscegVI9Zwi1dVDpeagGrtUHAMTcDwYnBBeO9oJlR4gFg1ANES8yQMSopXa43aFEB6RAAhf
      kwAIX5MACF+TAAhfkwAIX5MACF879OsApUKW1fUMfafPsLG8TEdPP2dO9XgxNiE8d+gAxOMJ
      UOtUy2VqloXjurjv/+fFWwtc18W2bd/X9UK7zYEXdQ8dgLrtcn5wgNmVAuPjl5mfnUU/3YeS
      3aCe1vVCu82BF3UPfw3gWKxu7jA6coHtzDpnhy42dUBCtJLWrLdEOo4jK4CHdb3QbnPwcKwA
      QjxCJADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC1yQAwtcOHQCrVmVxaQXbcdnObFKtWV6M
      S4iWOHQAbFeRisLU5DT5XYvFhXkvxiVESxx6Y0XINFjYKmDoAeLJDiqFumyHbkFdL7TbHDwU
      26F3ikU03aCzu5fC1hLRjh50XZft0B7X9UK7zYEXdWU3aJvU9UK7zYHsBhWiySQAwtckAMLX
      JADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC1w79uvJuMcfy2ha9p0+zubwizXFFWzt0AKLJ
      NH21CrtFaY7byrpeaLc5eCh2g+Yza9S0OKdPx+ju7WFudpZz0hzX87peaLc58KLuoasFAkHK
      uSzRcJBKIcugNMcVbezQAejo7qOjuw+AdCrR9AEJ0UpyF0j4mgRA+JoEQPiaBED4mgRA+JoE
      QPiaBED4mgRA+JoEQPiaBED42qG3QpTyWVY31jFDScqlAqFYisdGZT+QaE+HDkA8mcLYyhAN
      GyQ7R9jNb8l26BbU9UK7zcFDsR16cWaKPdugKxRhdXmGULxDmuO2oK4X2m0OpDmuj+t6od3m
      QJrjCtFkEgDha49MANzqHuWXX0E1Gic9FNFGHpkAKMfGzuVQrnvSQxFtRC6C26SuF9ptDuQi
      WIgme2AAbkzOUNwptXIsQrTcRwKglOKtd97j+e+8xLe/90rbvKopxFHse0JVKJboSCX57b//
      dzAMo9VjEqJlPnIR7Lou5d0qhqETj0UPXEgugr2t64V2m4OWXATruk4qGScSDlGr1T6ywa1R
      2+XG5DS4DW5ev8HqRrapAxKilR4Yp5/99DUmb8zy+a/8PS70Ju99XdODBHSFYzWkOW4L63qh
      3eagpbtBrZrN55/7m3TGwz/3dTMYRAOUHmB8/LI0x21RXS+02xy0rDluMbfB+vYOyr2NinTQ
      EQ3e+14pn0W5ikK5Rq2U55w0xxVtbN8AmKEIjcoOa5iM37cCJNM9JNPvfyBGusPzAQrhpX0D
      oBsmPafOcHF4lLApt0HFo2vfV4KX5qZoNGwmJycp78nuSvHo2jcAYxNPUd/NU98t8oPvf5+9
      9ripIcShPfCSOtXRSaXmcGX4Ak2+sSPEQ2PfFWB6ehJdA6XpnL80RlguA8Qjat8VQDWquEaU
      aFShy9FfPML2XQFODZzFwGantIuc/4hH2b4B+NFLLzCzkiVgaLhO87c33KMUbmkdZTdwK1nc
      /IJ3jyXEPk70LZFKuey9+M8Ifvq3sadewlm/RuwffPfnfqadXlb3sq4X2m0OWtoY66UXv4UW
      SvKZz/8K6XjoEwsddTu0alTBDIPdAKeBFk7+3PfbaTK9rOuFdpuDlr4nuFav7/v1ainPj9/6
      KXZtl2vXrnFreu5YA9CCUTRNRzPDH3nyH4S1to5TLh9rDMK/HhgAu1GnXq9zf5eRaDJNd2eC
      WrVC/9lhgtrJtiGp3bqJvbFxomMQ7euB60l3dw+FioV73xlSKZ9lp7hDuquHUnaZSKrH80F+
      nMSXvnSijy/a2wMDcG5ohOjGGpV6A/irHaHJdA9PP333Sd/b3dXUwdzObKKjMdbb19S6QjzI
      A0+BFmZuM7dRoDMWftCPNH8wmo4ur7yJFnrgCqCH4zxzeYRQC7dDj/X0tuyxhICPWQF2dwps
      bm7SsKXXpnh0PTAApqGTyWSwJADiEbZvAG7evIGmcfc2qAedHu6nlPKko4QQn2TfAFy5MkE8
      niAUCqG3YDPcO+urvLWy5PnjCHG/B14EN1yNJ554gljY+5f1zyQ7cFzH88cR4n77rgCZzBbV
      0jZXr16lVLU8H0R/IsHplHSYEK23bwBc1+XS2AQTExOergAv/uRl3pu/AUD96u9h3X7xwP92
      97W/pPjN5+XaQRzLvs/ut1/9AVsVg8HBswxe9O4u0GeGJ4iHY3cHMva30EKJA//b8OMTqItD
      Xg1N+MS+K8CXf/1rPPupy6wszLJnPeDc3G1w8/r1YzXH7e/oIh6JYTkOenoIPd6LUi7KrsMn
      HNkDnZ2YZ87c236tlMJtNGRFEIey7wrwnT/+A1ZKOhcGBzD1/V8quNsc18ZxnSM3x7Ve/Q9Y
      fU/wJ3u9fGXsMbqjMdyNd7Gv/RHBX/uPoAcO3BDV2d6m8N9+n/S/+pfosdgn/nw7NXD1SrvN
      gRd1j/yOMLtRo27B3Nwsjz9+5UhviHFL6xBKkLOgKxrD0HWUXUeVN9A6zqFp2oHfBKFcF3tj
      g8DAwIHG0E5v2vBKu83BQ/UheYYZJJ9dP1ZzXD05QM2FtKqg21Ucq0ZN6fee/Eq5qOISyrVR
      SlGfmcHO5bCzWZxCAWXdvUOlXBd3t4KeOPwbaoS/HTlOmqZz9vzxLkKVUjx/7U0+W3yLCzGT
      GTfFra7P8puPP3n3+6U1Gv/vd9E/9y/QOkbZfeUv0BMJ7Nw29vo6iS//GvFf+SLWygr5P/hD
      0A16fuffYsTjxxqX8I8TflO8olwpEbGKBMIpbC1ATTOJB4N3VwDXwdqaxOwdBT1A/fYkRlca
      bAcCAYyOFHo4jHIcnGIRACOdllOgA2q3OWjZ5wO0QqlSR9MgEQpizfwYO9JJvZyjNvBLmMlu
      lldXuDh8Cb1njGx1G2VH6RwZxZmZxskX0FNJ9HAIFQqhajXsbBajs/MTH3fv+g0as7OYly5h
      XHms6R/oIdrLiQXgpZ/MYgZ0/vbgNlowTv31/8w7hU7eNnd57q99lu+urfDPk0niPT38/hv/
      hdLSL/JbX3iKM6+9jrWyghY0CQ4N0fG136LyxpsUv/k8Zn8/Pf/udz72FKh28yaB7m4Kf/jf
      Cf3735XTJZ9r6SmQcl1o7EIogWW7aBoENBd7+iW0eC/1hSkYf45QJMJ2Lk/v4AUcpWi4DZxC
      BXXrJoFUCj0axUjEMXp60EMhlGXhFAro8Th6JPKx3ezqMzPUZ2YJTlwhfPbssX5n5Tg0ZufQ
      YzECpwcOddfqYdBOpype1W3ZX0opF+tn38C1qly3OtgMPkEqadNt1ohkN9l+c47Y6rss3Nym
      r7iCljZZD8Xou9Og8zd+ncoL30ULh9HMAB1f/SqFP/oG6Bo9/+Zfo5kmbqXC7mt/idnfT31m
      hsgvPIG1ukZgYIDop59CKUX1x1ex1tYIXjhP5f++jPmbX8VIHPzV5/vtvvoqRixGfW6OYGWX
      8Oho8yZMtMSRb4MemmOhGru4w3+D7607/K+XbvA/f/w837rxI340tcq3NzXM3i1uVqp8K3+R
      2J1l+tZexcrn2fmz7xDo6UYzDGLPPkvlzTdpLC7SWFrG3s4DULt5Cz0UZueF72BvblH68+/h
      1mrUp6buPr5SNFZWMM+fZ+eF71KfnsZaOt4WbCe3TeSpp4h86kmslZXjzpA4AS05BVJKsZIp
      Mf/THzKh3cZyqtRi5wjYe0RCIez5d9mcr9OwE1SDEc5pk1T1BMrUSU4rYr84QfVniyiloSdj
      xJ77ErU3roJhokci2Lntu0f8zU3CI8OYg+cIDg1hZ3MY6U4C6TRKKey1NRorq4SGLlDf2CT6
      +ASqVqM+O0do5BJ6OIxTKmMtLxEcGUEPBvf5Tf9KbWqa2vXrAMR/9a8TSKebtkwrpVCldbRg
      DC2c8qRJcTudqnhV19MA2K7N5OZN+iLDvPrOHOOFb5Pd3WKkNM03il+g2DvIuDbPKb1ANnqa
      FfM0dQL0N4qErBqDCzeZcBewNrpxnRR6pMrV9AUcM8QXtmZwyi4oEwwDlEI5DnpYI/Xlz5H4
      u/903zBaa2sU//efoCeTdP6jf8jOn/4Z4fFh6m/8V6K/9BUqN6qEJ65QvzNDx1d/4+N/aaVw
      LQtN19ECAfLVbfK72wz3jvzcjzUshxevTvP0+GkG+1IHmk978Spufg61V8T81NfQI598h+sw
      3PwC9et/SnDkOYyBJ5tau50C4OkpULlW4oeT/4dsqURvwkBvbLIQH2YpMMQ7jVGKwTQ/2R3h
      p+En2YyfomgkqOphqqEQCx1n+AvtCRphMGJV9FgULWXyXugcM8FetEgPesBGC5rgOGDbaMqF
      SAJr+cFdpu2tDEZPD87ODmpvDy1oEho+jarXsFeuoyeThCcmUI0DfDaapqEHg2jv/1HuZKZ4
      Z/Xtj/zYTqXG8tYOU8u5A8+dW1rDOPs0WqwHajsH/ncH5eTnIdyBk7vT9Nrt5FgrQG5rg0iq
      m1jY/NhTIMd1efntOQqZVT6XmKN74xU26nG2XZPToTpGPsdCvY/Z5CipYok+Y53OXInu4AaN
      bArlxnFqYbSAgfv0FfaKNTr3tnGqQazVVbRgEKMrjdJ1zHiQ9D/5xwT6z+07ZuW67F27hpZO
      ExkaYu+969Rv3SJ8eZDQY0+xd+06jbk5Ik9/htDFw2/zeNBRqlDeIxULH7jvkWrsYt3+Hnqi
      H2Pol9G0Jh+rlMLKLxLoHETTm9v6pp1WgCMHoF7Os5yrYtUqXB4f/cTboHff+P7BqawCBSgX
      NI26ZfHy1HUKOzt0YTJ65jSDloN5eoBGboNg7ymc8h56LHZ3p+eHhmxnMtiZLKGRS2jvn7Nr
      D9jB+mHt9EfySrvNwUMVgN3CFmUnQqWQYejiEI7jYFnWvQC473fVNQzj3lbpDwLiOM697yml
      cF0XTdNwAZSLhob+/pPYtm10XT9UHV3X733vgzr3j8e2bUzTPHad+8fjOA7BYPDYdT48HqDp
      4/yArutNG+cHdYB74z5OnfvH80GN49b58HiOHKdYMs3q9DTRVA+6rqOUIhKJNH1rQTsdTbys
      64V2m4OH6oUwzTAZu3ylmWMRouVa90KYEA8hCYDwNQmA8DUJgPA1CYDwNQmA8DUJgPA1CYDw
      NQmA8DUJgPC1owegCc1xhThpR9oL5Dg2Tr1GzbZxnKM3xz2Idmq06mVdL7TbHDw0zXFLhRw1
      B6KRGPNzc0dujnsQ7bSz0Mu6Xmi3OXhodoMmO7tJKJfVpUXOXRxu6oCEaKUTbY4rxEmTu0DC
      1yQAwtckAMLXJADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC1w4dgGopz+tvvY1d2+XatWvc
      mp7zYlxCtMTB9wIpxfLiHH1nh+npTLJX3eX0uRF281uyHboFdb3QbnPgRd2DB0DTGLwwTCmf
      ZWN9g45UB5ubM4Rjnfea48p2aNkO3W51T/ST4g+inSbTy7peaLc5aLuPSBLiYScBEL4mARC+
      JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQvnboADT2drlxe1qa44pHwqF2g1qWBUaQgKFw
      rAY128aW5rgtqeuFdpuDk90NCuQym3SdGkQDlGYwNjrO/Nwc+pl+2Q3qcV0vtNscnGxzXE3j
      1JlBSvksylUUduvUSnlpjiva2qHjlEz3kEz33P2fdEezxyNES8ldIOFrEgDhaxIA4WsSAOFr
      EgDhaxIA4WsSAOFrh34doJTPsrqxQTTRxU4+SzjRyejFc16MTQjPHXwFUIrlhVlCyS5CZgDN
      bdB/dpiA2x77XoTYz8ED8H5nuLU71ynVIRaLsr48y57T/A1wQrTKoU+Bzo89juu66LpBuqsb
      TZPLCNG+mtIa0XXde60Rm+1u2KSuF9ptDryo25S9pR8MStO0pm+HBjAMo+k127GuF9ptDppd
      t2nNcYVoR01dT5RyWVlapG47x65lN/aYnpwkX6qQ21qjWN477uiw61VKlRpOo8bi8iquUqyv
      LFGtH+dOlqJeLVOtWZSLOaampqnbzrHnQbkOi3OzVGoW+dwWtYbDTj5DJr/DcY5YtUqJuYVl
      HKvG9NQU28Uy+cwG+Z3K0Ysql9WleTL5HRrVMstrWyjlsrS4gOW4x6q7ND9LfqdCPrPB9J05
      LMdmYWER95DH7Vw2g/uh52cxt0WuWG7uCpBdX8QJpShu5xkbuXisWpmVO6yXDcYv9rO4lMW1
      9xi7PM7RT7AUG+sz7JTiGNoOXZ1JMvkdIqk+qjs5xsdGj1jXZX76Jkb8DOXsAqneM4TVHk74
      ePNQq5RxNZ35uVn0YBzNtVCaTgCboZFxAvrRZqJYLNIorJOrB6gpncfO9zO/mkPZVS6PXz5S
      TVyHaq3BnZkZQsEA6YhOpmZwqr+X7Wye0UsXjljXolqzmZmdxa1X6T83TL2UI93Xx2amxMjF
      wQOVqe5kefu9aUYvnEGLpihkNsAIoZx6c1cA23GJxxMY+vEz1X36ImPnu5maniEUihA0zWMd
      +UDj1MApNEAzAiRiUeq1PSKxBIHAcc4rdU6d6kcDxieeIGIXWcxVjj0PgYDO/MIyFy8MEorF
      CeiKYDBIMBjkOIcsp16hrKcYG7nIYxdOMT11m2AkimmaRy+qG5QLGZRuEjBNUrEwpZpLIh5H
      146xAugmhewGuhli4smnaBTXye1BPJ5EU9YBiyjuzMzjWlVyxfLdvwsOwVAY0zSbG4Ce3j6W
      Zibp6Oo7dq3KToH5hVUGzg7h1PIY4dgxjv6AclmcW6G0myfdkWBqYYNLo5fZXpkmnuo6el3X
      ZmVtk+3tLJnNNTZLNuPD5449D8VCHjQo1YBqnmT3AEEsLIJHPvoD5AsFrL0y+XyBublF+gZH
      0PbyGMHokWu6dp1iuUo0EqEjFmYmW+fTowPcmbxNuvfU0es2quxU60QiETZWFtm1g4yd7+XW
      jZv0Dpw9YBWNX/j000xMPM7IpSGWZibp7D+PYe+iBcJyESz8rT1uWAvhEQmA8DUJwCOuXm/g
      OMe/Lf2oMr7+9a9//aQH4Uff/B+/h9Y1yit//J9weq7glDMEo3GKuU3+/IevUC7m6Ugl2chs
      EzU1NjYzxJIpJt94hTenl1lZWSedjLE2e4ttJ069uEkgFGFjbZ1YIoH+/oXyjck7vPzqG1wZ
      G26bLRqt1B4tzB5BnQPDFFduoOlRlm68zbvlPN2dHaBFMXQobOfZWF3i9dffYHz0PGHNpWR0
      4roOigCmu8e3Xvg+z14ZYGHhNdLnJtCmX2YpU+LClc/yzOMXeeud63zzhR/wq7/8DJXqHqlk
      4qR/7YeOBOCEhCJJKpuLDF55ggYxCAR4bPwc7/7sNq4yCIZCLK+s0N/fh2GadCUjVFEEzDBP
      TjzD6UAZJ9hJb5dLwY1T2FpmIJGiq7+DoTN3G5fFoxG+9MVnee6LzxzvPv8jTG6DCl+Tk0Lh
      a/8fQ0P3vILfdOMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='D2-P4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='D2-P5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 14' width='151'>
      iVBORw0KGgoAAAANSUhEUgAAAJcAAADACAYAAAAJFPE2AAAACXBIWXMAABJ0AAASdAHeZh94
      AAALEElEQVR4nO3dXWxUdRrH8S87QvqSyswUllIhpqYJNJFY2CxIiZHVZGJZjcRGgkZSQk0a
      QmQRLkSbgGVVuHLxhSVjUqGprRizxrrQiolxb0rTJtBik+1iGnuxlBaBmSHdmU7ojrMXpdjO
      THGQPnZP5/dJenHOeWbyH+abc07OBTMnHo/HETHwm5legMxeikvMKC4xo7jEjOISM4pLzCgu
      MaO4ZlAkEpnpJZhSXGJGcYkZxSVmFJeYUVxiRnGJGcUlZhSXmFFcYkZxiRnFJWYUl5hRXGJG
      cYkZxSVmFJeYUVxiRnGJGcUlZhSXmFFcYkZxiRnFJWYUl5hRXGJGcYkZxSVmFJeYUVxiRnGJ
      GcUlZu6Z6QXcsaFWDuz/nIGE3fdtrGVfeUH6M8S4draJow3t/HsEspeuZcv25/ldvmvCK35+
      Zqj1AC2L97GtdMLLoj0cf/0LFu3cS3nhxPfLMHGn6aqL72rqveuZkW+PxffsqYt3BG7E4/Eb
      8UBHXXzPnmPxb0fubGawpTZe1zXxnf8T76p7Jf5Gy0D8vz/zUcLh8M9MOJvjLotDgxdZsnjx
      Xc4EaGvpo2xHJas9c4G5eFZXsqOsj5a2wB3MJAt3f8KJwceoKi8kg89ZgAMvi0ODIxT9Yf7d
      zUQv0BtaxR+LJn79LopWriJ06gLRx9eSlc5M4vuGz9L4UZAnXttGQeKxX+Dp105Mw7v8eprf
      2jxp22FxXeGHwQCnD1VzGoB55BUu55GKzTz5YP7NM0UaM6EQgQVevIlv7/WyIBAiBBSkMzPp
      QJj2Y8e5UXGI9UkvykwOi2shvho/vvHNWJRr331DQ91B6l+oZVtpbpozgMdN0rltvhsPIz9t
      pzMDdBytpgNg6TMcWJubcuVT/ee6w8PDU39ch0n8LI6755rElUV+STkvbSul51QbV+5kJhji
      euLs9RDBidvpzABrtvvx+2upmHOST9vDKZeak5OT9AeQl5c35Z/TJK7f2XHd5PLm44nFiKU7
      43bjvRog6bY8EOCq14073ZlJCvDtqiKn+TCtl263kszhrLiiYcIpvrdY4BrB3Gyy053JWkaJ
      +xxd/RMHY/R3ncNdsmzsRj2dmUS5pVRufYCv326gJ/pLP+Ts4ay4htt4v+Zdms9fJDwKMEqw
      t5X3PuzmId/DY/dH6czgZd2GYs4cqaczODo201nPkTPFbFg3fjeezkwy1/JN7H58gMamblJf
      IDPHnHjcWb8UO3q5k88aT9Led5mRmIvsRcWsf/ZFnlpx763nSunMmD6hJ8zZD/bz5dLd7L3N
      865IJHLr3isVpz+KcFxcs8lsj8tZl0VxFMUlZhSXmFFcYkZxiRnFJWYUl5hRXGJGcYkZxSVm
      FJeYUVxiRnGJGcUlZhSXmFFcYkZxiRnFJWYUl5hRXGJGcYkZxSVmFJeYUVxiRnGJGcUlZhSX
      mFFcYkZxiRnFJWYUl5hRXGJGcYkZxSVmFJeYUVxiRnGJGcUlZhSXmFFcYkZxiRnFJWYUl5hR
      XGJGcYkZxSVmFJeYUVxiRnGJGcUlZhSXmLlnphdwx4ZaObD/cwYSdt+3sZZ95QU3t6bnx9F/
      8Q+oR3s4/voXLNq5l/LCqX4+ffZzYFyDBNe/jP+55VOORHsaOPjxj2za/w6rPRDsbODNgw3M
      e2MrK7KmdyZZmO6mRgYe3cmWDA4LHHhZHBq8yJLFi28zEaCtpY+yHZWs9swF5uJZXcmOsj5a
      2gLTPJMs3P0JJwYfo6q8kMxOy5FxjVB0//ypB6IX6A2tYmXRxK/WRdHKVYR6LxCdzplE4bM0
      fhTkie0+ClIdzzAOuyxe4YfBAKcPVXMagHnkFS7nkYrNPPlg/tiZIhQisMCLN/GlXi8LAiFC
      QMF0zUw6EKb92HFuVBxifdKLMpPD4lqIr8aPb3wzFuXad9/QUHeQ+hdq2VaaO7bf4ybp3Dbf
      jYeRn7anawboOFpNB8DSZziwNjflyiORSMr9w8PDKfc7UeJncdxlcRJXFvkl5by0rZSeU21c
      Gd8fDHE9cfZ6iODE7emaAdZs9+P311Ix5ySftodTLjUnJyfpDyAvL2/KP6dJXL+z47rJ5c3H
      E4sRA3C78V4NkHTLHQhw1evGPZ0zkxTg21VFTvNhWi/FpuFTOZ+z4oqGCaf43mKBawRzs8kG
      yFpGifscXf0TB2P0d53DXbKMrOmcSZRbSuXWB/j67QZ6Ut7xZxZnxTXcxvs179J8/iLhUYBR
      gr2tvPdhNw/5Hr55f+Rl3YZizhyppzM4OjbTWc+RM8VsWDd+pz1dM8lcyzex+/EBGpu6SX2B
      zBxz4vF4fKYXcSdGL3fyWeNJ2vsuMxJzkb2omPXPvshTK+6d8Fxphp/QE+bsB/v5culu9t7m
      eVckErl175XK06+duJN/mhnX/NbmSduOi2s2me1xOeuyKI6iuMSM4hIzikvMKC4xo7jEjOIS
      M4pLzCguMaO4xIziEjOKS8woLjGjuMSM4hIzikvMKC4xo7jEjOISM4pLzCguMaO4xIziEjOK
      S8woLjGjuMSM4hIzikvMKC4xo7jEjOISM4pLzCguMaO4xIziEjOKS8woLjGjuMSM4hIzikvM
      KC4xo7jEjOISM4pLzCguMaO4xIziEjOKS8woLjGjuMSM4hIz98z0Au5G7F8f88pf/sHwmu34
      J/6C+VArB/Z/zkDC/H0ba9lXXjD+arsfUI/2cPz1L1i0cy/lhVP9fPrs59y4Yv00n/ge38Y1
      /G0w4djQIMH1L+N/bvmUL4/2NHDw4x/ZtP8dVnsg2NnAmwcbmPfGVlZkpT+TLEx3UyMDj+5k
      SwaHBY69LMbob66nt6wK3+Lko0ODF1myOMWBWwK0tfRRtqOS1Z65wFw8qyvZUdZHS1vgDmaS
      hbs/4cTgY1SVF5LZaTk0rlh/M/W9ZVT5ClIeHxocoej++VO/QfQCvaFVrCya+PW7KFq5ilDv
      BaLpziQKn6XxoyBPbPeRemWZxXmXxdglWpt6KauqmeILvMIPgwFOH6rmNADzyCtcziMVm3ny
      wfyxs0koRGCBF2/iS71eFgRChICCdGYmHQjTfuw4NyoOsT7pRZnJYXHFuNR6jPO/r6JmylPD
      Qnw1fny3XhLl2nff0FB3kPoXatlWmju23+Mm6dw2342HkZ+205kBOo5W0wGw9BkOrM1NuapI
      JJJy//Dw8FQfxHESP4ujLouxS1/R0LeO7VNcDlNyZZFfUs5L20rpOdXGlfH9wRDXE2evhwhO
      3E5nBliz3Y/fX0vFnJN82h5OuYycnJykP4C8vLwp/5wmcf2OOnP986u/831vjFerP0440kF1
      R+Kjhslc3nw8sRgxALcb79VBAjD5zBQIcNW7GHe6M5MU4NtVxcU/H6b1/sx+BDHOUXGt2PpX
      /FsTdnZ/SPW5VT8954qGCc/NJTfhu40FrhHMXUI2QNYyStyn6Op/mqJbN+wx+rvO4S7ZTVa6
      M4lyS6nc2ssrbzew5LaPKzKDoy6LaRlu4/2ad2k+f5HwKMAowd5W3vuwm4d8D988C3lZt6GY
      M0fq6QyOjs101nPkTDEb1o3fjaczk8y1fBO7Hx+gsamb1BfIzOGoM1daFvrY/bKbzxo/oMZ/
      mZGYi+xFxayv3MdTE04lWSu28OpzTRyt/RN140/fX31+0tkmnZlkLgrLd/HsB/s53Ppb9mbw
      86458Xg8PtOLyFSRSOTWjX0qT7924ldczd1rfmvzpO3Zd1mU/xuKS8woLjGjuMSM4hIzikvM
      KC4xo7jEjOISM4pLzCguMaO4xIziEjOKS8z8D4VH6fD069E5AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      j7OP7KWrWZIlFSLF7NDtozfWkcMaR84VSxM4XwwpZ/FSrlwrxI0mN8KEoUkAhKFJAIShSQCE
      oUkAhKFJAIShSQCEoUkAhKFJAIShSQCEoUkAhKFJAIShSQCEoUkAhKFJAIShSQCEoUkAhKFJ
      AIShSQCEoUkAhKFJAIShSQCEoUkAhKFJAIShSQCEoUkAhKFJAISh6TY3qBry0Xr8IJ8e6OGB
      v36CtEtXagHqPt3H6REvUfHpbFi3hqQY/abjFuJadAuA3+cmOqWI0uzJq9a5O+sZs5fxwIYc
      0FRMJvkiErNDtwDYYlMpKPDTX3f1m7vPOcioe4Bdp44Sikpk/ab1OGKjLlQlUVWVQCBw4fEh
      VdWrm6Bx2bbEWaqO+1zTtGn3uZ7Vaa58vWelMoUJhYKlX6IiN5nepiN09A7hWJSJopwNi6Io
      l1UoUUzhSy1dp87oWg1lvjLpuc+Zfp8ryo3b9qwEICM/nQ/bu1malYQvECQq1oLJZLpsp58P
      A+j/Yly6LXGWnvvcZDJNu891PSQ2Xf566xYAd28ze2uacA+76H7jTUor15Gp9jAat5hF2Usp
      HjzE7rffIn7BQlaXOfTqhhDT0i0ACVklbN9ecsVSB+ff6sUr11O8Uq+tCzEz8t0vDE0CIAxN
      AiAMTQIgDE0CIAxNAiAMTQIgDE0CIAxNAiAMTQIgDE0CIAxNAiAMTQIgDE0CIAxNAiAMTQIg
      DE0CIAxNAiAMTQIgDE0CIAxNAiAMTQIgDE0CIAxNAiAMTQIgDE0CIAxNAiAMTbcAaJrG1MQw
      hz46hDv8I+hrPconNScJ6tUJIT6HbgGYmujnUPVRnKf7mQqzPujup7G9m6EhFzqWvxBiWroF
      ICYhk013bibbHhNmbYi6o42UVZYTY9F37n8hpjMrBTIGTtahZS8nK1Gj/twyVVUJBoMXfvb5
      fBceH9SxZI6maZdtS5ylZ5miK1/fK51/H+hB07hs27MSgKGRIbr7uug57qG9y01cViobl+Vj
      tVoB8Pv9F34GsOhYwshkMhEdHa1b+/OVnmWjFEWZdp9bLPq9LU0mLtu2blvyDndT13KaU85O
      xqsPUly4lBRtiAlbFmVr7qYMYLKPdz/tZc2yfL26IcS0dAuANc5OUZGVoqJiwERsYjTRWioW
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
